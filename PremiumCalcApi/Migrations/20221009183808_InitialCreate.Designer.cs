// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PremiumCalcApi.Models;

namespace PremiumCalcApi.Migrations
{
    [DbContext(typeof(InsurancePremiumContext))]
    [Migration("20221009183808_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PremiumCalcApi.Models.Factor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Factors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Light Manual",
                            Rating = 1.50m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Heavy Manual",
                            Rating = 1.75m
                        },
                        new
                        {
                            Id = 3,
                            Name = "White Collar",
                            Rating = 1.25m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Professional",
                            Rating = 1m
                        });
                });

            modelBuilder.Entity("PremiumCalcApi.Models.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("Occupations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cleaner",
                            RatingId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Doctor",
                            RatingId = 4
                        },
                        new
                        {
                            Id = 3,
                            Name = "Author",
                            RatingId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Farmer",
                            RatingId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mechanic",
                            RatingId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Florist",
                            RatingId = 1
                        });
                });

            modelBuilder.Entity("PremiumCalcApi.Models.Occupation", b =>
                {
                    b.HasOne("PremiumCalcApi.Models.Factor", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");
                });
#pragma warning restore 612, 618
        }
    }
}
